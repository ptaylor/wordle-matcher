#!/usr/bin/env python3


def read_words(f):
    words = []
    with open(f,'r') as word_list:
        for word in word_list:
             words.append(word.strip())
    return words



def letter_frequency(words):
    frequency = dict()
    for word in words:
        letter_freq_in_word(word, frequency)
    return frequency

def letter_freq_in_word(word, frequency):
    for letter in word:
        add_letter(letter, frequency)

def add_letter(letter, frequency):
    if letter not in frequency:
       frequency[letter] = 0
  
    frequency[letter] = frequency[letter] + 1


def score_words(words, pc_hist):

    pc_max = max(pc_hist.values())
    scores = dict()

    for word in words:
        scores[word] = score_word(word, pc_hist, pc_max)
    return scores

def score_word(word, pc_hist, pc_max):

   score = 0
   for letter in word:
       score = score + (pc_max - pc_hist[letter])

   score = score + vowel_score(word)
   score = score + repeat_score(word)
   return score 


def vowel_score(word):

   v = {'a', 'e', 'i', 'o', 'u', 'y'}
   return 6 - len(set(word).intersection(v))


def repeat_score(word):
    u = set(word)
    return (len(word) - len(u)) * 6

def display_scores(scores):

   score_values = sorted(set(scores.values()), reverse = False)

   num = 0;
   for score in score_values:
       if num > 6:
          break
       num = num + 1
       print(f"{score:3}: ", end = "")
       words = find_words_with_count(scores, score)
       count = 0
       for word in words:
           count = count + 1
           print(f"{word} ", end = "")
           if count % 10 == 0:
              count = 0
              print("\n     ", end = "")
       print("")
   print("")
     

def calculate_percent_histogram(frequency):

    pc_hist = dict()
    total = sum(frequency.values())

    values = sorted(frequency.values(), reverse = True)
    for v in values:
        pc = int(percent(total, v))
        for word in find_words_with_count(frequency, v):
            pc_hist[word] = pc
    return pc_hist


def display_histogram(pc_hist):
    
    print("")
    values = sorted(set(pc_hist.values()), reverse = True)
    for pc in values:
        if pc > 0:
            words = (", ".join(find_words_with_count(pc_hist, pc))).rjust(20)
            width = "#" * int(pc)
            print(f"{words}: {width}")
    print("")

def find_words_with_count(frequency, count):
    return [word for word in frequency.keys() if frequency[word] == count]

def percent(max, v):
    return round(v * 100 / max, 2)

words = read_words("words5.txt")
frequency = letter_frequency(words)          
pc_hist = calculate_percent_histogram(frequency)
display_histogram(pc_hist) 

scores = score_words(words, pc_hist)
display_scores(scores)

   